<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\hc32f448_motor_control0.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\hc32f448_motor_control0.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Mar 24 16:28:31 2024
<BR><P>
<H3>Maximum Stack Usage =        296 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Speed_CmdSpdSet &rArr; Motor_SwInit &rArr; Flux_Init &rArr; Filter_InitFirstLpf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[88]">ADC1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88]">ADC1_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[88]">ADC1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[89]">ADC2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[8a]">ADC3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[42]">CLK_XtalStop_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[63]">CMP1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[64]">CMP2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[65]">CMP3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[66]">CMP4_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[87]">CTC_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[34]">DCU1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[35]">DCU2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[36]">DCU3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[37]">DCU4_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2a]">DMA1_Error_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2b]">DMA1_TC0_BTC0_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2c]">DMA1_TC1_BTC1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2d]">DMA1_TC2_BTC2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2e]">DMA1_TC3_BTC3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2f]">DMA1_TC4_BTC4_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[30]">DMA1_TC5_BTC5_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[38]">DMA2_Error_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[39]">DMA2_TC0_BTC0_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[3a]">DMA2_TC1_BTC1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[3b]">DMA2_TC2_BTC2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[3c]">DMA2_TC3_BTC3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[3d]">DMA2_TC4_BTC4_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[3e]">DMA2_TC5_BTC5_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[32]">EFM_OpEnd_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[31]">EFM_PEError_ReadCol_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[78]">EMB_GR0_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[79]">EMB_GR1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7a]">EMB_GR2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7b]">EMB_GR3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6e]">EVENT_PORT1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6f]">EVENT_PORT2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[70]">EVENT_PORT3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[71]">EVENT_PORT4_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1a]">EXTINT00_SWINT16_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1b]">EXTINT01_SWINT17_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1c]">EXTINT02_SWINT18_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1d]">EXTINT03_SWINT19_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1e]">EXTINT04_SWINT20_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1f]">EXTINT05_SWINT21_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[20]">EXTINT06_SWINT22_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[21]">EXTINT07_SWINT23_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[22]">EXTINT08_SWINT24_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[23]">EXTINT09_SWINT25_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[24]">EXTINT10_SWINT26_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[25]">EXTINT11_SWINT27_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[26]">EXTINT12_SWINT28_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[27]">EXTINT13_SWINT29_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[28]">EXTINT14_SWINT30_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[29]">EXTINT15_SWINT31_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[85]">FCM_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[61]">I2C1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[62]">I2C2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[a]">IRQ000_Handler</a> from isr.o(i.IRQ000_Handler) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[b]">IRQ001_Handler</a> from isr.o(i.IRQ001_Handler) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[c]">IRQ002_Handler</a> from isr.o(i.IRQ002_Handler) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[d]">IRQ003_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[e]">IRQ004_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[f]">IRQ005_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[10]">IRQ006_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[11]">IRQ007_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[12]">IRQ008_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[13]">IRQ009_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[14]">IRQ010_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[15]">IRQ011_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[16]">IRQ012_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[17]">IRQ013_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[18]">IRQ014_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[19]">IRQ015_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[80]">MCAN1_INT0_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[81]">MCAN1_INT1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[82]">MCAN2_INT0_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[83]">MCAN2_INT1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[43]">PWC_WKTM_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[33]">QSPI_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[41]">RTC_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6b]">SPI1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[76]">SPI2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[77]">SPI3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[44]">SWDT_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from isr.o(i.SysTick_Handler) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[8d]">SystemInit</a> from system_hc32f448.o(i.SystemInit) referenced from startup_hc32f448.o(.text)
 <LI><a href="#[3f]">TMR0_1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[40]">TMR0_2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[55]">TMR4_1_GCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[56]">TMR4_1_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[57]">TMR4_1_Reload_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[58]">TMR4_1_SCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[59]">TMR4_2_GCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5a]">TMR4_2_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5b]">TMR4_2_Reload_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5c]">TMR4_2_SCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5d]">TMR4_3_GCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5e]">TMR4_3_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5f]">TMR4_3_Reload_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[60]">TMR4_3_SCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[45]">TMR6_1_GCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[47]">TMR6_1_GDet_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[46]">TMR6_1_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[48]">TMR6_1_SCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4b]">TMR6_2_GCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4d]">TMR6_2_GDet_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4c]">TMR6_2_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4e]">TMR6_2_SCmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4a]">TMRA_1_Cmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[49]">TMRA_1_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[50]">TMRA_2_Cmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[4f]">TMRA_2_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[52]">TMRA_3_Cmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[51]">TMRA_3_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[54]">TMRA_4_Cmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[53]">TMRA_4_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6d]">TMRA_5_Cmp_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6c]">TMRA_5_Ovf_Udf_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[8b]">TRNG_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[67]">USART1_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[68]">USART1_TxComplete_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[84]">USART1_WKUP_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[69]">USART2_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[6a]">USART2_TxComplete_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[72]">USART3_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[73]">USART3_TxComplete_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[74]">USART4_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[75]">USART4_TxComplete_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7c]">USART5_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7d]">USART5_TxComplete_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7e]">USART6_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[7f]">USART6_TxComplete_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[86]">WDT_Handler</a> from startup_hc32f448.o(.text) referenced from startup_hc32f448.o(RESET)
 <LI><a href="#[8e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_hc32f448.o(.text)
 <LI><a href="#[8f]">fputc</a> from hc32_ll_utility.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[8c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[8e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[93]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[95]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d7]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[d8]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[d9]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[da]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[db]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[dc]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>ADC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>ADC2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>ADC3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CLK_XtalStop_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>CMP1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CMP2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CMP3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CMP4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>CTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DCU1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DCU2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DCU3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DCU4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Error_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_TC0_BTC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_TC1_BTC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_TC2_BTC2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_TC3_BTC3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_TC4_BTC4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_TC5_BTC5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA2_Error_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_TC0_BTC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_TC1_BTC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_TC2_BTC2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_TC3_BTC3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_TC4_BTC4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_TC5_BTC5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EFM_OpEnd_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EFM_PEError_ReadCol_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>EMB_GR0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>EMB_GR1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>EMB_GR2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>EMB_GR3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>EVENT_PORT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>EVENT_PORT2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>EVENT_PORT3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>EVENT_PORT4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTINT00_SWINT16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTINT01_SWINT17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTINT02_SWINT18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTINT03_SWINT19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTINT04_SWINT20_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTINT05_SWINT21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTINT06_SWINT22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTINT07_SWINT23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTINT08_SWINT24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTINT09_SWINT25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTINT10_SWINT26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTINT11_SWINT27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTINT12_SWINT28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXTINT13_SWINT29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EXTINT14_SWINT30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTINT15_SWINT31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>FCM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>I2C2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>IRQ003_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>IRQ004_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>IRQ005_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>IRQ006_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IRQ007_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ008_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ009_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ010_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>IRQ011_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>IRQ012_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ013_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ014_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IRQ015_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>MCAN1_INT0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>MCAN1_INT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>MCAN2_INT0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>MCAN2_INT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>PWC_WKTM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>QSPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SPI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPI2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SPI3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SWDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TMR0_1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TMR0_2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TMR4_1_GCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>TMR4_1_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TMR4_1_Reload_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TMR4_1_SCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TMR4_2_GCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TMR4_2_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TMR4_2_Reload_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TMR4_2_SCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TMR4_3_GCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TMR4_3_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>TMR4_3_Reload_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TMR4_3_SCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TMR6_1_GCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TMR6_1_GDet_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TMR6_1_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TMR6_1_SCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TMR6_2_GCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TMR6_2_GDet_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TMR6_2_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TMR6_2_SCmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TMRA_1_Cmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TMRA_1_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TMRA_2_Cmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TMRA_2_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TMRA_3_Cmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TMRA_3_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TMRA_4_Cmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TMRA_4_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TMRA_5_Cmp_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TMRA_5_Ovf_Udf_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TRNG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>USART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>USART1_TxComplete_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>USART1_WKUP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>USART2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>USART2_TxComplete_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>USART3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>USART3_TxComplete_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>USART4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>USART4_TxComplete_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>USART5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>USART5_TxComplete_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>USART6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>USART6_TxComplete_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>WDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32f448.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[94]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e0]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>Adc_InitSample</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, adc_sample.o(i.Adc_InitSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Adc_InitSample
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_HwInit
</UL>

<P><STRONG><a name="[9e]"></a>InitMcu_FeedWdg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, init_mcu.o(i.InitMcu_FeedWdg))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ000_Handler
</UL>

<P><STRONG><a name="[d3]"></a>InitMcu_Gpio</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_mcu.o(i.InitMcu_Gpio))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>Motor_FastStop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, motor_control.o(i.Motor_FastStop))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ002_Handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ001_Handler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ000_Handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Control
</UL>

<P><STRONG><a name="[a0]"></a>Adc_CheckOffset</STRONG> (Thumb, 180 bytes, Stack size 12 bytes, adc_sample.o(i.Adc_CheckOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Adc_CheckOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ002_Handler
</UL>

<P><STRONG><a name="[b0]"></a>Adc_Sample</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, adc_sample.o(i.Adc_Sample))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Adc_Sample
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[c0]"></a>AnaSpd_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, cmd_set_analog_io.o(i.AnaSpd_Init))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[c8]"></a>AnaSpd_SetCmdSpd</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, cmd_set_analog_io.o(i.AnaSpd_SetCmdSpd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AnaSpd_SetCmdSpd
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SysTickerIsrHandler
</UL>

<P><STRONG><a name="[92]"></a>DDL_AssertHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hc32_ll_utility.o(i.DDL_AssertHandler), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[d1]"></a>DDL_ConsoleOutputChar</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, hc32_ll_utility.o(i.DDL_ConsoleOutputChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DDL_ConsoleOutputChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[9d]"></a>Filter_FirstLpf</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, filter.o(i.Filter_FirstLpf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Filter_FirstLpf
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_CVLimit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Observer
</UL>

<P><STRONG><a name="[98]"></a>Filter_InitFirstLpf</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, filter.o(i.Filter_InitFirstLpf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Filter_InitFirstLpf
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Init
</UL>

<P><STRONG><a name="[c1]"></a>Filter_InitPeriodAvg</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, filter.o(i.Filter_InitPeriodAvg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Filter_InitPeriodAvg
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[a9]"></a>Filter_PeriodAvg</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, filter.o(i.Filter_PeriodAvg))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_CVLimit
</UL>

<P><STRONG><a name="[97]"></a>Flux_Init</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, flux_observer.o(i.Flux_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Flux_Init &rArr; Filter_InitFirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_InitFirstLpf
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[99]"></a>Flux_Observer</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, flux_observer.o(i.Flux_Observer))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Flux_Observer &rArr; Math_Atan2
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math_Sin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math_Cos
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math_Atan2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_FirstLpf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[a]"></a>IRQ000_Handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, isr.o(i.IRQ000_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ000_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_FastStop
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_FeedWdg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IRQ001_Handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, isr.o(i.IRQ001_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ001_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_FastStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>IRQ002_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, isr.o(i.IRQ002_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = IRQ002_Handler &rArr; Motor_MainIsrHandler &rArr; Startup_Control &rArr; InitMcu_EnMotorPwm
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_FastStop
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_CheckOffset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>InitMcu_Adc</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, init_mcu.o(i.InitMcu_Adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = InitMcu_Adc &rArr; InitMcu_SetGPO2ANI
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_SetGPO2ANI
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_HwInit
</UL>

<P><STRONG><a name="[d2]"></a>InitMcu_Clock</STRONG> (Thumb, 660 bytes, Stack size 36 bytes, init_mcu.o(i.InitMcu_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = InitMcu_Clock
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>InitMcu_EnMotorPwm</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, init_mcu.o(i.InitMcu_EnMotorPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitMcu_EnMotorPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Startup_Control
</UL>

<P><STRONG><a name="[ac]"></a>InitMcu_InitMotorTimer</STRONG> (Thumb, 786 bytes, Stack size 20 bytes, init_mcu.o(i.InitMcu_InitMotorTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitMcu_InitMotorTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_HwInit
</UL>

<P><STRONG><a name="[a3]"></a>InitMcu_Nvic</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, init_mcu.o(i.InitMcu_Nvic))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitMcu_Nvic
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>InitMcu_SetGPO2ANI</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, init_mcu.o(i.InitMcu_SetGPO2ANI))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitMcu_SetGPO2ANI
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Adc
</UL>

<P><STRONG><a name="[d5]"></a>InitMcu_StartMotorTimer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, init_mcu.o(i.InitMcu_StartMotorTimer))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>InitMcu_StartSystemTicker</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, init_mcu.o(i.InitMcu_StartSystemTicker))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>InitMcu_SystemTicker</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init_mcu.o(i.InitMcu_SystemTicker))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_HwInit
</UL>

<P><STRONG><a name="[ba]"></a>InitMcu_UpdateMotorPwmDuty</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, init_mcu.o(i.InitMcu_UpdateMotorPwmDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitMcu_UpdateMotorPwmDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[9c]"></a>Math_Atan2</STRONG> (Thumb, 188 bytes, Stack size 12 bytes, module_math.o(i.Math_Atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Math_Atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Observer
</UL>

<P><STRONG><a name="[9a]"></a>Math_Cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, module_math.o(i.Math_Cos))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Observer
</UL>

<P><STRONG><a name="[9b]"></a>Math_Sin</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, module_math.o(i.Math_Sin))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Observer
</UL>

<P><STRONG><a name="[b4]"></a>Math_SinCos</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, module_math.o(i.Math_SinCos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Math_SinCos
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[aa]"></a>Math_Sqrt</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, module_math.o(i.Math_Sqrt))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_CVLimit
</UL>

<P><STRONG><a name="[a8]"></a>Motor_CVLimit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, motor_control.o(i.Motor_CVLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Motor_CVLimit &rArr; Filter_FirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math_Sqrt
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_PeriodAvg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_FirstLpf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SysTickerIsrHandler
</UL>

<P><STRONG><a name="[ab]"></a>Motor_HwInit</STRONG> (Thumb, 392 bytes, Stack size 72 bytes, motor_control.o(i.Motor_HwInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Motor_HwInit &rArr; InitMcu_Adc &rArr; InitMcu_SetGPO2ANI
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_SystemTicker
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_InitMotorTimer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Adc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_InitSample
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Svpwm_InitCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>Motor_MainIsrHandler</STRONG> (Thumb, 344 bytes, Stack size 40 bytes, motor_control.o(i.Motor_MainIsrHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Motor_MainIsrHandler &rArr; Startup_Control &rArr; InitMcu_EnMotorPwm
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_FastStop
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_UpdateMotorPwmDuty
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Sample
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Svpwm_CalcDuration
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Svpwm_7SegSymmPwm
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Control
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Startup_Control
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prot_MotorOverCurrent
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_IncPid
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math_SinCos
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Observer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transf_Park
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transf_InvPark
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transf_Clarke
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ002_Handler
</UL>

<P><STRONG><a name="[bb]"></a>Motor_SwInit</STRONG> (Thumb, 1296 bytes, Stack size 232 bytes, motor_control.o(i.Motor_SwInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Motor_SwInit &rArr; Flux_Init &rArr; Filter_InitFirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaSpd_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Startup_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_InitSpdTraj
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_InitCmdSpdSet
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prot_InitOverCurrent
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prot_InitMonitorVbus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_InitPosPid
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_InitIncPid
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flux_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_InitPeriodAvg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_InitFirstLpf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_CmdSpdSet
</UL>

<P><STRONG><a name="[91]"></a>Motor_SysTickerIsrHandler</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, motor_control.o(i.Motor_SysTickerIsrHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Motor_SysTickerIsrHandler &rArr; Motor_CVLimit &rArr; Filter_FirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_CVLimit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaSpd_SetCmdSpd
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_TgtSpdTraj
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prot_MonitorVbus
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_PosPid
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b6]"></a>PID_IncPid</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, pid.o(i.PID_IncPid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PID_IncPid
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[c4]"></a>PID_InitIncPid</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, pid.o(i.PID_InitIncPid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_InitIncPid
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[c3]"></a>PID_InitPosPid</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, pid.o(i.PID_InitPosPid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_InitPosPid
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[ca]"></a>PID_PosPid</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, pid.o(i.PID_PosPid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_PosPid
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SysTickerIsrHandler
</UL>

<P><STRONG><a name="[bd]"></a>Prot_InitMonitorVbus</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, protection.o(i.Prot_InitMonitorVbus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Prot_InitMonitorVbus
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[be]"></a>Prot_InitOverCurrent</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, protection.o(i.Prot_InitOverCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Prot_InitOverCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[c7]"></a>Prot_MonitorVbus</STRONG> (Thumb, 236 bytes, Stack size 12 bytes, protection.o(i.Prot_MonitorVbus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Prot_MonitorVbus
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SysTickerIsrHandler
</UL>

<P><STRONG><a name="[af]"></a>Prot_MotorOverCurrent</STRONG> (Thumb, 124 bytes, Stack size 28 bytes, protection.o(i.Prot_MotorOverCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Prot_MotorOverCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[cb]"></a>Speed_CmdSpdSet</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, speed_set.o(i.Speed_CmdSpdSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Speed_CmdSpdSet &rArr; Motor_SwInit &rArr; Flux_Init &rArr; Filter_InitFirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>Speed_InitCmdSpdSet</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, speed_set.o(i.Speed_InitCmdSpdSet))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[c2]"></a>Speed_InitSpdTraj</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, speed_set.o(i.Speed_InitSpdTraj))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[c9]"></a>Speed_TgtSpdTraj</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, speed_set.o(i.Speed_TgtSpdTraj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Speed_TgtSpdTraj
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SysTickerIsrHandler
</UL>

<P><STRONG><a name="[b3]"></a>Startup_Control</STRONG> (Thumb, 636 bytes, Stack size 40 bytes, startup_control.o(i.Startup_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Startup_Control &rArr; InitMcu_EnMotorPwm
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_EnMotorPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[c5]"></a>Startup_Init</STRONG> (Thumb, 726 bytes, Stack size 12 bytes, startup_control.o(i.Startup_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Startup_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[b2]"></a>Stop_Control</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, stop_control.o(i.Stop_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Stop_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_FastStop
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[c6]"></a>Stop_Init</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stop_control.o(i.Stop_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Stop_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
</UL>

<P><STRONG><a name="[b9]"></a>Svpwm_7SegSymmPwm</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, svpwm.o(i.Svpwm_7SegSymmPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Svpwm_7SegSymmPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[b8]"></a>Svpwm_CalcDuration</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, svpwm.o(i.Svpwm_CalcDuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Svpwm_CalcDuration
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[ad]"></a>Svpwm_InitCalc</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, svpwm.o(i.Svpwm_InitCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Svpwm_InitCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_HwInit
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; Motor_SysTickerIsrHandler &rArr; Motor_CVLimit &rArr; Filter_FirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SysTickerIsrHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, system_hc32f448.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8d]"></a>SystemInit</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, system_hc32f448.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f448.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>Transf_Clarke</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, coordinate_transform.o(i.Transf_Clarke))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Transf_Clarke
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[b7]"></a>Transf_InvPark</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, coordinate_transform.o(i.Transf_InvPark))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Transf_InvPark
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[b5]"></a>Transf_Park</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, coordinate_transform.o(i.Transf_Park))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Transf_Park
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_MainIsrHandler
</UL>

<P><STRONG><a name="[ce]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e3]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[96]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>

<P><STRONG><a name="[e4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e5]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8f]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hc32_ll_utility.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fputc &rArr; DDL_ConsoleOutputChar
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_ConsoleOutputChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[8c]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = main &rArr; Speed_CmdSpdSet &rArr; Motor_SwInit &rArr; Flux_Init &rArr; Filter_InitFirstLpf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_StartSystemTicker
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_StartMotorTimer
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Nvic
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Gpio
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Clock
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_HwInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_SwInit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_CmdSpdSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a4]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, init_mcu.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Nvic
</UL>

<P><STRONG><a name="[a6]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, init_mcu.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Nvic
</UL>

<P><STRONG><a name="[a5]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, init_mcu.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_SystemTicker
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMcu_Nvic
</UL>

<P><STRONG><a name="[cf]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
